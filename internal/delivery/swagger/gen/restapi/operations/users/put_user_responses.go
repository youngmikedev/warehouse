// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PutUserOKCode is the HTTP code returned for type PutUserOK
const PutUserOKCode int = 200

/*PutUserOK ok

swagger:response putUserOK
*/
type PutUserOK struct {
}

// NewPutUserOK creates PutUserOK with default headers values
func NewPutUserOK() *PutUserOK {

	return &PutUserOK{}
}

// WriteResponse to the client
func (o *PutUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PutUserBadRequestCode is the HTTP code returned for type PutUserBadRequest
const PutUserBadRequestCode int = 400

/*PutUserBadRequest error message

swagger:response putUserBadRequest
*/
type PutUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutUserBadRequest creates PutUserBadRequest with default headers values
func NewPutUserBadRequest() *PutUserBadRequest {

	return &PutUserBadRequest{}
}

// WithPayload adds the payload to the put user bad request response
func (o *PutUserBadRequest) WithPayload(payload string) *PutUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user bad request response
func (o *PutUserBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutUserInternalServerErrorCode is the HTTP code returned for type PutUserInternalServerError
const PutUserInternalServerErrorCode int = 500

/*PutUserInternalServerError error message

swagger:response putUserInternalServerError
*/
type PutUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutUserInternalServerError creates PutUserInternalServerError with default headers values
func NewPutUserInternalServerError() *PutUserInternalServerError {

	return &PutUserInternalServerError{}
}

// WithPayload adds the payload to the put user internal server error response
func (o *PutUserInternalServerError) WithPayload(payload string) *PutUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put user internal server error response
func (o *PutUserInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
