// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/youngmikedev/warehouse/internal/delivery/swagger/gen/models"
)

// GetProductsOKCode is the HTTP code returned for type GetProductsOK
const GetProductsOKCode int = 200

/*GetProductsOK ok

swagger:response getProductsOK
*/
type GetProductsOK struct {

	/*
	  In: Body
	*/
	Payload *models.ProductGetProductsResponse `json:"body,omitempty"`
}

// NewGetProductsOK creates GetProductsOK with default headers values
func NewGetProductsOK() *GetProductsOK {

	return &GetProductsOK{}
}

// WithPayload adds the payload to the get products o k response
func (o *GetProductsOK) WithPayload(payload *models.ProductGetProductsResponse) *GetProductsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get products o k response
func (o *GetProductsOK) SetPayload(payload *models.ProductGetProductsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProductsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetProductsBadRequestCode is the HTTP code returned for type GetProductsBadRequest
const GetProductsBadRequestCode int = 400

/*GetProductsBadRequest error message

swagger:response getProductsBadRequest
*/
type GetProductsBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetProductsBadRequest creates GetProductsBadRequest with default headers values
func NewGetProductsBadRequest() *GetProductsBadRequest {

	return &GetProductsBadRequest{}
}

// WithPayload adds the payload to the get products bad request response
func (o *GetProductsBadRequest) WithPayload(payload string) *GetProductsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get products bad request response
func (o *GetProductsBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProductsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetProductsUnauthorizedCode is the HTTP code returned for type GetProductsUnauthorized
const GetProductsUnauthorizedCode int = 401

/*GetProductsUnauthorized unauthorized

swagger:response getProductsUnauthorized
*/
type GetProductsUnauthorized struct {
}

// NewGetProductsUnauthorized creates GetProductsUnauthorized with default headers values
func NewGetProductsUnauthorized() *GetProductsUnauthorized {

	return &GetProductsUnauthorized{}
}

// WriteResponse to the client
func (o *GetProductsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// GetProductsInternalServerErrorCode is the HTTP code returned for type GetProductsInternalServerError
const GetProductsInternalServerErrorCode int = 500

/*GetProductsInternalServerError error message

swagger:response getProductsInternalServerError
*/
type GetProductsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetProductsInternalServerError creates GetProductsInternalServerError with default headers values
func NewGetProductsInternalServerError() *GetProductsInternalServerError {

	return &GetProductsInternalServerError{}
}

// WithPayload adds the payload to the get products internal server error response
func (o *GetProductsInternalServerError) WithPayload(payload string) *GetProductsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get products internal server error response
func (o *GetProductsInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProductsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
